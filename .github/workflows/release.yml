name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  linux-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-unknown-linux-gnu
          use-cross: false

      - name: Optimize and package binary
        run: |
          strip target/x86_64-unknown-linux-gnu/release/covid-service-rs
          chmod +x target/x86_64-unknown-linux-gnu/release/covid-service-rs
          zip -j ./covid-service-rs target/x86_64-unknown-linux-gnu/release/covid-service-rs
          cp ./covid-service-rs.zip /home/runner/covid-service-rs-linux-x86_64.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Check binary dir
        run: |
          ls target/x86_64-unknown-linux-gnu/release -lrt
          ls -lrt
          ls ~/ -lrt
          pwd

      - name: Upload binary asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: covid-service-rs-linux-x86_64.zip
          asset_path: /home/runner/covid-service-rs-linux-x86_64.zip
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_content_type: application/zip

  # linux-aarch64:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1

  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         default: true

  #     - name: Install build tools
  #       run: sudo apt update && sudo apt install -y build-essential libssl-dev pkg-config

  #     - name: Install cross (for cross-compilation support)
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: install
  #         args: cross

  #     - name: Build binary
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: build
  #         args: --release --target aarch64-unknown-linux-gnu
  #         use-cross: true

  #     - name: Optimize and package binary
  #       run: |
  #         cd target/aarch64-unknown-linux-gnu/release
  #         strip covid-service-rs
  #         chmod +x covid-service-rs
  #         tar -c covid-service-rs | gzip > covid-service-rs.tar.gz
  #     - name: Upload binary
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         asset_name: covid-service-rs-${{ github.event.release.tag-name }}-aarch64-unknown-linux-gnu.tar.gz
  #         asset_path: target/aarch64-unknown-linux-gnu/release/covid-service-rs.tar.gz
  #         upload_url: ${{ github.event.release.upload_url }}
